abstract class Employee {
    firstName: string;
    lastName: string;
    constructor(firstName: string, lastName: string) {
        this.firstName = firstName;
        this.lastName = lastName;
    }

    abstract getStipend(): number
    getFullName(): string {
        return `${this.firstName} ${this.lastName}`;
    }
    getNamePrint() {
        console.log(this.getFullName());
    }

    getcompensation(): string {
        return `${this.firstName} makes ${this.getStipend()} a month`; // should use with return statement but not working
    }
    getCompensationPrint() {
        console.log(this.getcompensation());
    }
}

class FullTimeEpmployee extends Employee {
    stipend: number;
    constructor(firstName: string, lastName: string, stipend: number) {
        super(firstName, lastName);
        this.stipend = stipend;
    }
    getStipend(): number {
        return this.stipend;
    }
}

class Contractor extends Employee {
    hours: number;
    rate: number;
    constructor(firstName: string, lastName: string, rate: number, hours: number) {
        super(firstName, lastName);
        this.rate = rate;
        this.hours = hours;
    }
    getStipend(): number {
        return this.hours * this.rate;
    }
}
const a = new FullTimeEpmployee("Abdur Rehman", "Hashmi", 6000);
const b = new Contractor("Sufyan", "Makki", 6000, 120);
a.getCompensationPrint();
a.getNamePrint();
b.getCompensationPrint();
b.getNamePrint();
